{"meta":{"title":"mendely的博客","subtitle":"专注于技术，努力提高自己","description":"","author":"proud1069","url":"http://www.mendely.xyz","root":"/"},"pages":[],"posts":[{"title":"端口占用解决方法","slug":"port_occupy_solution","date":"2022-07-05T07:39:04.563Z","updated":"2022-07-05T07:39:04.559Z","comments":true,"path":"2022/07/05/port_occupy_solution/","link":"","permalink":"http://www.mendely.xyz/2022/07/05/port_occupy_solution/","excerpt":"","text":"问题描述：当关闭一个应用之后，该应用的端口依然处于监听状态，这导致再打开改应用时，系统会报错（该端口被占用） 解决方法1.查找被占用的端口 1netstat -tln #显示正在侦听的端口（可通过管道符 | 与grep 端口 连用） 2.查看端口属于哪个程序，被哪个进程占用 1lsof -i :[端口号] 3.杀死占用端口的进程 1kill -9 [pid]","categories":[],"tags":[]},{"title":"hexo个人博客搭建","slug":"Hexo_build","date":"2022-07-05T07:37:39.983Z","updated":"2022-07-05T07:37:39.980Z","comments":true,"path":"2022/07/05/Hexo_build/","link":"","permalink":"http://www.mendely.xyz/2022/07/05/Hexo_build/","excerpt":"","text":"环境准备1. 安装nodejs确保centos7中已安装wget工具，如果未安装请执行一下命令： 1yum install -y wget 从官网下载nodejs压缩包 1wget https://nodejs.org/dist/v16.14.2/node-v16.14.2-linux-x64.tar.xz 解压nodejs压缩包 1tar -vxf node-v16.14.2-linux-x64.tar.xz 将解压出来的文件夹移动到&#x2F;usr&#x2F;local&#x2F;bin目录下，并进入该目录下查看解压的文件是否移动成功 123mv node-v16.14.2-linux-x64 /usr/local/bincd /usr/local/binll 修改文件名称及配置文件 1234mv node-v16.14.2-linux-x64/ nodevim /etc/profile #设置node软件家目录的环境变量，在该文件任意位置添加以下两行指令export NODE_HOEM=/usr/local/bin/node #设置node软件家目录的环境变量export PATH=$PATH:$NODE_HOEM/bin #设置node软件到bin目录下环境变量，实现bin目录下命令的全局使用 判断nodejs环境是否配置成功 12node -v #查看node版本npm -v #查看npm版本 2.安装git1yum install -y git 安装Hexo1.切换到&#x2F;root目录1cd 2.安装cnpm模块，设置为国内taobao仓库地址，并验证是否安装成功123npm install -g cnpm --registry=https://registry.npm.taobao.orgcnpm -v # 查看cnpm模块版本，验证cnpm是否安装成功 3.安装hexo博客1cnpm install -g hexo-cli 4.创建blog目录，之后的操作都在该目录中完成12345678910mkdir blogcd blog/hexo init # hexo初始化当前目录为工作目录npm install # npm install命令根据package.json文件的depencies字段配置安装所有依赖包# 在开始下面操作之前记得先在云服务器安全组放行4000端口，停止、关闭防火墙，临时关闭selinuxhexo server #启动hexo博客# 浏览器访问主机 ip:4000 5.修改hexo默认主题（以github上yilia主题为例）1234567# git克隆(下载)hexo-theme-yiliya.git项目放入themes/yiliya目录下git clone https://github.com/litten/hexo-theme-yilia.git themes/yiliyavim _config.yml #修改博客配置文件，将theme字段修改下面的形式theme: yiliahexo server #启动hexo博客 6.实现GitHub域名访问hexo博客123456ssh-keygen # 生成密钥：私钥和公钥Enter passphrase (empty for no passphrase):键入通行密码Enter same passphrase again:键入与上面相同的密码cat /root/.ssh/id_rsa.pub # 查看公钥文件内容，并复制 在GitHub上点击右上角的个人头像–&gt;Setting–&gt;SSH and GPG keys–&gt;New SSH key，在Key中粘贴刚刚复制的公钥文件内容，点击Add SSH key。 回到最初的GitHub界面，点击右上角的+号–&gt;New repository，创建一个[GitHub用户名].github.io的新仓库用来存放我们本地的代码文件，等一会我们的站点会通过这个名称实现域名访问。 复制该仓库的ssh地址（注意一定是ssh地址，否则会报错） 123456789101112git init # 当前目录建立一个git代码库git add. # 当前目录代码推送到暂存空间cnpm install --save hexo-deployer-git # 安装hexo-deployer-git模块vim _config.yml # 找到deploy字段，修改如下deploy: type: git repo: [仓库的ssh地址] branch: masterhexo deploy # 远程部署 hexo常用命令12345hexo clean 清除dbhexo n 新建博客hexo g 生成博客hexo d 部署博客hexo s 开启服务 搭建过程中遇到的问题在客户端提交文件时报错 12345678910111213[root@web2 sample]# git commit -m &quot;add client.txt&quot;*** Please tell me who you are.Run git config --global user.email &quot;you@example.com&quot; git config --global user.name &quot;Your Name&quot;to set your account&#x27;s default identity.Omit --global to set the identity only in this repository.fatal: unable to auto-detect email address (got &#x27;root@web2.(none)&#x27;) 解决办法：配置自己的GitHub用户名和邮箱，邮箱就是GitHub注册的邮箱，用户名就是GitHub的用户名 12345[root@web2 sample]# git config --global user.name &quot;[用户名]&quot;[root@web2 sample]# git config --global user.email &quot;[邮箱]&quot;# 再次提交就能成功了 具体操作可参考一下文章[还不会搭建博客吗？]centos7系统部署hexo博客新手入门-进阶，看这一篇就够了-阿里云开发者社区 (aliyun.com) 利用 GitHub 从零开始搭建一个博客 (qq.com) Docker DevOps实战: 一分钟搭建Hexo博客-阿里云开发者社区 (aliyun.com) 如有侵权请联系删除，联系方式&#112;&#x72;&#111;&#117;&#x64;&#49;&#48;&#x36;&#x39;&#x40;&#49;&#x36;&#x33;&#46;&#x63;&#111;&#109;","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-07-04T04:17:16.855Z","updated":"2022-07-04T04:17:16.855Z","comments":true,"path":"2022/07/04/hello-world/","link":"","permalink":"http://www.mendely.xyz/2022/07/04/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}